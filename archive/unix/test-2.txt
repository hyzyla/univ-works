Лабораторна робота 5. Програмування в Shell. Виконання команд. Перенаправлення потоків.

ПІБ
  Гизила Євгеній Сергійович
Група
  ТТП-3

1) Що означають оператори в командному рядку: 

  ; - роздільник списку команд. Кожна команда виконується незалежно одна від одної. І послідовно одна за одною.
  & - роздільник списку команд. Команда зліва виконується у іншому sub shell і команда справа не чекає завершення попередньої. Статус такої команди завжди 0
  && - логічне AND. Використовується як роздільник команд, де команда справа виконається лише в тому випадку, якщо команда зліва завершилася з кодом 0
  || - логічне OR. Використовується як роздільник команд, де команда справа виконається лише в тому випадку, якщо команда зліва завершилася з кодом не нульовим кодом.

2) Які номери, назви та яке призначення мають стандартні потоки вводу та виводу?

	0 stdin  <  - для введення значень з певного файлу у програму, що за замовчуванням є клавіатура
	1 sddout >  - для виведення результатів у файл, що за замовчуванням є термінал
	2 stderr 2>  - те саме як і в stdout тільки для відображення помилок

3) Які функції виконують наступні оператори перенаправлення вводу/виводу?

  >  - описано вище
  <  - описано вище
  >> - для додавання інформації у файл, замість перезаписування
  |  - для перенаправлення виводу команди зліва оператора у коману справа оператора

4) Як перенаправити потік помилок програми prog у стандартний потік виводу при запуску? Написати командний рядок.

  prog 2>&1

5) Як створити архів каталогу /home/user1/ за допомогою програм tar та gzip? Написати командний рядок.

  tar -cvf - /home/user1/ | gzip > arhcive.tar.gzip

6) Як створити tar-gzip архів каталогу /home/user1/ за допомогою програми tar? Написати командний рядок.

  tar -zcvf archive.tar.gzip /home/user1 

7) Що роблять наступні скрипти shell? Який їх результат роботи?

1 - якщо файл somefile.txt існує, то відображається в станартний потік вміст файлу somefie.txt інакше в стандарний потік відобржається повідомлення "no such file" 

  if [ -e somefile.txt ] ; then
  cat somefile.txt
  else
  echo “no such file”
  fi

2 - виконує команду touch для кожного файлу file1, file2 ... file5. Touch - створює файл, якщо його немає, або якщо є, то змінює атрибут останньої зміни на поточний системний час.

  for a in 1 2 3 4 5; do
  touch file$a
  done

3 - виконує команду cat для кожного з файлів file_1, file_2, file_3 .. file_9. cat - відображає в стандартний потік вміст файлу переданого йому аргументом

  for a in $( seq 1 10 ) ; do
  cat file_$a
  done

4 - кожну хвилину скрит перевіряє чи mydirectory є директорією і якщо це правда, то добавляє у файл logfile вміст вміст директорії у розширеному форматі, додає родільник "-- SEPARATOR --"

  while [ -d mydirectory ] ; do
  ls -l mydirectory >> logfile
  echo -- SEPARATOR -- >> logfile
  sleep 60
  done

 

 

 

 

 